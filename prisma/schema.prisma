generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int        @id @default(autoincrement()) @db.SmallInt
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  username   String     @unique
  password   String
  Progress   Progress[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Progress {
  id         Int      @id @default(autoincrement()) @db.SmallInt
  created_at DateTime @default(now()) @db.Timestamptz(6)
  completed_at DateTime? 
  task_id    Int?     @db.SmallInt
  user_id    Int?     @db.SmallInt
  Tasks      Tasks?   @relation(fields: [task_id], references: [id], onDelete: Cascade)
  Users      Users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id, completed_at])
  @@index([task_id])
  @@unique([user_id, task_id])

}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Tasks {
  id          Int        @id @default(autoincrement()) @db.SmallInt
  created_at  DateTime   @default(now()) @db.Timestamptz(6)
  title       String
  description String?
  type        type?
  Progress    Progress[]
}

enum type {
  LESSON
  CHALLENGE
}
